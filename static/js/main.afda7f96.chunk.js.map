{"version":3,"sources":["components/globalStyles.js","assets/logo.svg","utils/constants.js","components/Header.js","components/Timer.js","assets/icon-settings.svg","assets/icon-close.svg","components/AcceptButton.js","components/RadioButton.js","components/SelectBlock.js","components/InputBlock.js","components/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","COLORS","FONTS","StyledHeader","styled","header","Navigation","div","ToggleButton","button","fontColor","font","bgColor","Header","values","toggle","setToggle","src","logo","alt","map","value","color","onClick","replace","Container","main","TimerInner","CustomProgressBar","CircularProgressbar","TimerButton","Wrapper","Timer","timerRef","useRef","handleButtonState","current","isStopped","isPaused","start","isStarted","pause","isCompleted","stop","date","Date","now","renderer","minutes","seconds","total","api","countdownTime","zeroPad","progressBarValue","strokeWidth","styles","buildStyles","pathColor","trailColor","textColor","textSize","text","ref","autoStart","ApplyButton","input","Rectangle","AcceptButton","type","RadioBtn","SelectLabel","label","RadioButton","index","onSelect","isFont","content","name","onChange","SelectContainer","SelectElement","SelectFontOrColor","swapColor","a","b","toString","SetTimeTitle","SetTimeBlock","SetTimeLabel","SetTimeInput","span","InputBlock","placeholder","required","min","max","Background","SettingsContainer","form","SettingsHeader","SettingsTitle","h1","CloseIcon","img","SetTime","h2","SetTimeInner","Settings","toggleVisibility","onSubmit","setValues","visible","set","target","oldValues","hidden","iconClose","pomodoro","short_break","long_break","SettingsImg","SettingsButton","App","initialValue","useState","acceptedValues","setAcceptedValues","settingsIcon","e","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afda7f96.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  ${'' /* font-family: \"Kumbh Sans\"; */}\r\n}\r\n  body {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    background-color: #1E213F; \r\n\r\n  }\r\n  `;\r\n","export default __webpack_public_path__ + \"static/media/logo.7479961e.svg\";","export const COLORS = [\"#F87070\", \"#70F3F8\", \"#D881F8\"];\r\nexport const FONTS = [\"Kumbh Sans\", \"Roboto Slab\", \"Space Mono\"];","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport { FONTS, COLORS } from \"../utils/constants\";\r\n\r\nconst StyledHeader = styled.header`\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n  z-index: -1;\r\n  min-width: 300px;\r\n  max-width: 373px;\r\n  width: 90%;\r\n  height: 63px;\r\n  background: #161932;\r\n  border-radius: 31px;\r\n  margin: 47px auto;\r\n\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst ToggleButton = styled.button`\r\n  margin: auto;\r\n  cursor: pointer;\r\n\r\n  color: ${({ fontColor }) => fontColor};\r\n  font-family: ${({ font }) => font};\r\n\r\n  width: 120px;\r\n  background: ${({ bgColor }) => bgColor};\r\n  border-radius: 26.5px;\r\n  padding: 17px 0;\r\n  font-weight: bold;\r\n  border: none;\r\n\r\n  @media (max-width: 375px) {\r\n    width: 105px;\r\n  }\r\n`;\r\n\r\nconst Header = ({ values, toggle, setToggle }) => {\r\n  const onToggleButton = (name) => {\r\n    setToggle(name);\r\n  };\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <h1>\r\n        <img src={logo} alt=\"alt\" />\r\n      </h1>\r\n      <Navigation>\r\n        {[\"pomodoro\", \"short_break\", \"long_break\"].map((value) => (\r\n          <ToggleButton\r\n            font={FONTS[values.font]}\r\n            bgColor={toggle === value ? COLORS[values.color] : \"transparent\"}\r\n            fontColor={toggle === value ? \"#1E213F\" : \"rgba(215, 224, 255, 0.4)\"}\r\n            onClick={() => onToggleButton(value)}\r\n          >\r\n            {value.replace(\"_\", \" \")}\r\n          </ToggleButton>\r\n        ))}\r\n      </Navigation>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { COLORS, FONTS } from \"../utils/constants\";\r\nimport Countdown, { zeroPad } from \"react-countdown\";\r\n\r\nconst Container = styled.main`\r\n  position: relative;\r\n  width: 410px;\r\n  height: 410px;\r\n\r\n  border-radius: 50%;\r\n  background: green;\r\n  background: linear-gradient(315deg, #2e325a 0%, #0e112a 100%);\r\n  box-shadow: -50px -50px 100px #272c5a, 50px 50px 100px #121530;\r\n  margin: 48px auto;\r\n  margin-bottom: 0;\r\n\r\n  @media (max-width: 450px) {\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n`;\r\n\r\nconst TimerInner = styled.div`\r\n  border-radius: 50%;\r\n  background-color: #161932;\r\n  position: absolute;\r\n  top: 22px;\r\n  left: 22px;\r\n\r\n  @media (max-width: 450px) {\r\n    top: 16px; \r\n    left: 16px;\r\n  }\r\n`;\r\n\r\nconst CustomProgressBar = styled(CircularProgressbar)`\r\n  margin: 13px;\r\n  width: 339px;\r\n  height: 339px;\r\n  font-weight: ${({ font }) => (font === \"Space Mono\" ? \"normal\" : \"bold\")};\r\n  font-family: ${({ font }) => font};\r\n\r\n  @media (max-width: 450px) {\r\n    width: 244px;\r\n    height: 244px;\r\n  }\r\n`;\r\n\r\nconst TimerButton = styled.button`\r\n  font-family: ${({font}) => font};\r\n  font-size: 20px;\r\n  margin-top: 38px;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  font-weight: bold;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  letter-spacing: 15px;\r\n  margin-right: -15px;\r\n\r\n  color: #d7e0ff;\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n    letter-spacing: 13.125px;\r\n    margin-right: -13.125px;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 60%;\r\n  margin: auto;\r\n  text-align: center;\r\n\r\n  @media (max-width: 450px) {\r\n    top: 50%\r\n  }\r\n`;\r\n\r\nconst Timer = ({ values, toggle }) => {\r\n  const timerRef = useRef();\r\n\r\n  const renderer = ({ minutes, seconds, total, api }) => {\r\n    const countdownTime = `${zeroPad(minutes)}:${zeroPad(seconds)}`;\r\n\r\n    const value = values[toggle] * 60;\r\n\r\n    const progressBarValue = (100 / value) * (value - total / 1000);\r\n\r\n    return (\r\n      <>\r\n        <CustomProgressBar\r\n          font={FONTS[values.font]}\r\n\r\n          strokeWidth={3}\r\n          styles={buildStyles({\r\n            pathColor: `${COLORS[values.color]}`,\r\n            trailColor: \"transparent\",\r\n            textColor: `#D7E0FF`,\r\n            textSize: \"30px\"\r\n          })}\r\n          value={progressBarValue}\r\n          text={countdownTime}\r\n        />\r\n        <Wrapper>\r\n          <TimerButton font={FONTS[values.font]} onClick={handleButtonState}>\r\n            {!api.isCompleted()\r\n              ? !api.isStarted()\r\n                ? \"start\"\r\n                : \"pause\"\r\n              : \"restart\"}\r\n          </TimerButton>\r\n        </Wrapper>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleButtonState = () => {\r\n    if (timerRef.current.isStopped() || timerRef.current.isPaused()) {\r\n      timerRef.current.start();\r\n    }\r\n    \r\n    if (timerRef.current.isStarted()) {\r\n      timerRef.current.pause();\r\n    }\r\n\r\n    if (timerRef.current.isCompleted()) {\r\n      timerRef.current.stop();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TimerInner>\r\n        <Countdown\r\n          date={Date.now() + values[toggle] * 60000}\r\n          renderer={renderer}\r\n          ref={timerRef}\r\n          autoStart={false}\r\n        />\r\n      </TimerInner>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","export default __webpack_public_path__ + \"static/media/icon-settings.e0a317db.svg\";","export default __webpack_public_path__ + \"static/media/icon-close.79cfecaf.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS } from \"../utils/constants\";\r\n\r\nconst ApplyButton = styled.input`\r\n  border: none;\r\n  width: 140px;\r\n  height: 53px;\r\n  border-radius: 26.5px;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  font-family: inherit;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  color: #ffffff;\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Rectangle = styled.div`\r\n  position: absolute;\r\n  top: 358px;\r\n  left: 50%;\r\n  margin-left: -70px;\r\n  border: none;\r\n  width: 140px;\r\n  height: 53px;\r\n  border-radius: 26.5px;\r\n  background-color: #fff;\r\n\r\n  @media (max-width: 540px) {\r\n    top: 420px;\r\n    left: 50%;\r\n    margin-left: -70px;\r\n  }\r\n`;\r\n\r\nconst AcceptButton = ({ values }) => {\r\n  return (\r\n    <Rectangle>\r\n      <ApplyButton type=\"submit\" bgColor={COLORS[values.color]} value=\"Apply\" />\r\n    </Rectangle>\r\n  );\r\n};\r\n\r\nexport default AcceptButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RadioBtn = styled.input`\r\n  position: absolute;\r\n  visibility: hidden;\r\n`;\r\n\r\nconst SelectLabel = styled.label`\r\n  color: ${({ fontColor }) => fontColor};\r\n  width: 40px;\r\n  height: 40px;\r\n  text-align: center;\r\n  padding-top: ${({ font }) => (font !== \"Space Mono\" ? \"8px\" : \"6px\")};\r\n  border-radius: 50%;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  font-family: ${({ font }) => font};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    padding-top: ${({ font }) => (font !== \"Space Mono\" ? \"6px\" : \"4px\")};\r\n    border: 2px solid #fff1fa;\r\n  }\r\n`;\r\n\r\nconst RadioButton = ({\r\n  index,\r\n  font,\r\n  color,\r\n  onSelect,\r\n  isFont,\r\n  fontColor,\r\n  content,\r\n}) => {\r\n  return (\r\n    <SelectLabel bgColor={color} font={font} fontColor={fontColor}>\r\n      {content}\r\n      <RadioBtn\r\n        type=\"radio\"\r\n        value={index}\r\n        name={isFont ? \"font\" : \"color\"}\r\n        onChange={onSelect}\r\n      />\r\n    </SelectLabel>\r\n  );\r\n};\r\n\r\nexport default RadioButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, FONTS } from \"../utils/constants\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport { SetTimeTitle } from \"./Settings\";\r\n\r\nconst SelectContainer = styled.div`\r\n  padding: 7px 0;\r\n  display: flex;\r\n\r\n  justify-content: space-between;\r\n  border-top: 1px solid #e3e1e1;\r\n  @media (max-width: 540px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst SelectElement = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 150px;\r\n\r\n  @media (max-width: 540px) {\r\n    margin: auto;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst SelectFontOrColor = ({ name, onSelect, values, isFont = true }) => {\r\n  const swapColor = (index, a, b) => (values.font === index.toString() ? a : b);\r\n  return (\r\n    <SelectContainer>\r\n      <SetTimeTitle>{name}</SetTimeTitle>\r\n      <SelectElement>\r\n        {isFont\r\n          ? FONTS.map((font, index) => (\r\n              <RadioButton\r\n                // checked={values.font === index.toString ? true : false}\r\n                key={font}\r\n                color={swapColor(index, \"#161932\", \"#EFF1FA\")}\r\n                fontColor={swapColor(index, \"#FFF\", \"#1E213F\")}\r\n                content={\"Aa\"}\r\n                font={font}\r\n                index={index}\r\n                onSelect={onSelect}\r\n                isFont={isFont}\r\n              />\r\n            ))\r\n          : COLORS.map((color, index) => (\r\n              <RadioButton\r\n                content={values.color === index.toString() ? \"✓\" : \"\"}\r\n                key={color}\r\n                index={index}\r\n                onSelect={onSelect}\r\n                color={color}\r\n                isFont={isFont}\r\n              />\r\n            ))}\r\n      </SelectElement>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nexport default SelectFontOrColor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SetTimeBlock = styled.div`\r\n  position: relative;\r\n\r\n  @media (max-width: 540px) {\r\n    display: block;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst SetTimeLabel = styled.label`\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  line-height: 15px;\r\n  width: 150px;\r\n  color: #1e213f;\r\n  mix-blend-mode: normal;\r\n  opacity: 0.5;\r\n\r\n  @media (max-width: 540px) {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst SetTimeInput = styled.input`\r\n  border: none;\r\n  background: #eff1fa;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  width: 148px;\r\n  margin-top: 7px;\r\n\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n\r\n  color: black;\r\n\r\n  @media (max-width: 540px) {\r\n    margin-top: 0;\r\n    width: 140px;\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.span`\r\n  margin: auto 0;\r\n`;\r\n\r\nconst InputBlock = ({ name, onChange, placeholder }) => {\r\n  return (\r\n    <SetTimeBlock>\r\n      <SetTimeLabel>\r\n        <Wrapper>{name}</Wrapper>\r\n        <SetTimeInput\r\n          type=\"number\"\r\n          onChange={onChange}\r\n          required\r\n          placeholder={placeholder}\r\n          min=\"1\"\r\n          max=\"120\"\r\n        />\r\n      </SetTimeLabel>\r\n    </SetTimeBlock>\r\n  );\r\n};\r\n\r\nexport default InputBlock;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport iconClose from \"../assets/icon-close.svg\";\r\nimport AcceptButton from \"./AcceptButton\";\r\nimport SelectFontOrColor from \"./SelectBlock\";\r\nimport InputBlock from \"./InputBlock\";\r\n\r\nconst Background = styled.div`\r\n  z-index: 1;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst SettingsContainer = styled.form`\r\n  position: static;\r\n  width: 540px;\r\n  margin: 20px auto;\r\n  padding-bottom: 15px;\r\n  background-color: #fff;\r\n  border-radius: 25px;\r\n  font-family: \"Kumbh Sans\";\r\n\r\n  @media (max-width: 540px) {\r\n    position: static;\r\n    width: 90%;\r\n    min-width: 240px;\r\n    border-radius: 15px;\r\n    padding-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst SettingsHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 16px;\r\n  border-bottom: 1px solid #e3e1e1;\r\n\r\n  @media (max-width: 540px) {\r\n    padding: 8px;\r\n  }\r\n`;\r\n\r\nconst SettingsTitle = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n  line-height: 35px;\r\n  margin: 0;\r\n  /* identical to box height */\r\n\r\n  color: #161932;\r\n\r\n  @media (max-width: 540px) {\r\n    font-size: 20px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n\r\nconst CloseIcon = styled.img`\r\n  width: 14px;\r\n  height: 14px;\r\n  margin: auto 0;\r\n`;\r\n\r\nconst SetTime = styled.div`\r\n  margin: 24px 40px;\r\n  text-align: left;\r\n\r\n  @media (max-width: 540px) {\r\n    margin: 15px;\r\n  }\r\n`;\r\n\r\nexport const SetTimeTitle = styled.h2`\r\n  font-size: 13px;\r\n  padding-top: 2px;\r\n  line-height: 16px;\r\n  letter-spacing: 5px;\r\n\r\n  color: #161932;\r\n\r\n  @media (max-width: 540px) {\r\n    font-size: 11px;\r\n    line-height: 14px;\r\n    margin: 0;\r\n    padding: 0;\r\n    /* identical to box height */\r\n    text-align: center;\r\n    letter-spacing: 4.23077px;\r\n  }\r\n`;\r\n\r\nconst SetTimeInner = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 24px;\r\n\r\n  @media (max-width: 540px) {\r\n    display: block;\r\n    padding-bottom: 12px;\r\n  }\r\n`;\r\n\r\nconst Settings = ({\r\n  toggleVisibility,\r\n  onSubmit,\r\n  setValues,\r\n  values,\r\n  visible\r\n}) => {\r\n  const set = (name) => {\r\n    return ({ target: { value } }) => {\r\n      setValues((oldValues) => ({ ...oldValues, [name]: value }));\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Background hidden={true} ref={visible}>\r\n      <SettingsContainer onSubmit={onSubmit}>\r\n        <SettingsHeader>\r\n          <SettingsTitle>Settings</SettingsTitle>\r\n          <CloseIcon src={iconClose} alt={\"clone\"} onClick={toggleVisibility} />\r\n        </SettingsHeader>\r\n        <SetTime>\r\n          <SetTimeTitle>TIME (MINUTES)</SetTimeTitle>\r\n          <SetTimeInner>\r\n            <InputBlock\r\n              placeholder={values.pomodoro}\r\n              name=\"pomodoro\"\r\n              onChange={set(\"pomodoro\")}\r\n            />\r\n            <InputBlock\r\n              placeholder={values.short_break}\r\n              name=\"short break\"\r\n              onChange={set(\"short_break\")}\r\n            />\r\n            <InputBlock\r\n              placeholder={values.long_break}\r\n              name=\"long break\"\r\n              onChange={set(\"long_break\")}\r\n            />\r\n          </SetTimeInner>\r\n          <SelectFontOrColor\r\n            values={values}\r\n            name=\"FONTS\"\r\n            onSelect={set(\"font\")}\r\n          />\r\n          <SelectFontOrColor\r\n            values={values}\r\n            name=\"COLORS\"\r\n            onSelect={set(\"color\")}\r\n            isFont={false}\r\n          />\r\n        </SetTime>\r\n        <AcceptButton values={values} />\r\n      </SettingsContainer>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { GlobalStyles } from \"./components/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"./components/Header\";\r\nimport Timer from \"./components/Timer\";\r\nimport settingsIcon from \"./assets/icon-settings.svg\";\r\nimport Settings from \"./components/Settings\";\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  margin: 48px auto;\r\n  width: 100%;\r\n\r\n  /* @media (max-width: 768px) {\r\n    margin-top: 80px;\r\n  } */\r\n\r\n  @media (max-width: 375px) {\r\n    margin-top: 32px;\r\n  }\r\n`;\r\n\r\nconst SettingsImg = styled.img`\r\n  margin-top: 63px;\r\n  cursor: pointer;\r\n  @media (max-width: 375px) {\r\n    margin-top: 144px;\r\n  }\r\n`;\r\n\r\nconst SettingsButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\nconst App = () => {\r\n  const initialValue = {\r\n    pomodoro: \"25\",\r\n    short_break: \"5\",\r\n    long_break: \"15\",\r\n    font: \"0\",\r\n    color: \"0\",\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValue);\r\n\r\n  const [toggle, setToggle] = useState(\"pomodoro\");\r\n\r\n  const [acceptedValues, setAcceptedValues] = useState(initialValue);\r\n\r\n  const visible = useRef(null);\r\n\r\n  const toggleVisibility = () => {\r\n    visible.current.hidden = !visible.current.hidden;\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setAcceptedValues(values);\r\n    toggleVisibility();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <>\r\n        <Container>\r\n          <Header\r\n            values={acceptedValues}\r\n            toggle={toggle}\r\n            setToggle={setToggle}\r\n          />\r\n          <Timer values={acceptedValues} toggle={toggle} />\r\n          <SettingsButton>\r\n            <SettingsImg\r\n              src={settingsIcon}\r\n              alt=\"settings-icon\"\r\n              onClick={toggleVisibility}\r\n            />\r\n          </SettingsButton>\r\n\r\n          <Settings\r\n            toggleVisibility={toggleVisibility}\r\n            setValues={setValues}\r\n            onSubmit={onSubmit}\r\n            values={values}\r\n            visible={visible}\r\n          />\r\n        </Container>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}